declare type AnyObject = {
    [key: string]: any;
};
declare type SourceObj = {
    engine: string;
    engineVs: string;
    platform: string;
    supporter: string;
    supporterVs: string;
    system: string;
    systemVs: string;
    shell: string;
    shellVs: string;
    host: string;
    platformOs: string;
    screenWidth: number;
    screenHeight: number;
    devicePixelRatio: number;
    model: string;
    ua: string;
};
declare function getClientInfo(): SourceObj;
declare const isWechat: () => boolean;
declare const isWeibo: () => boolean;
declare const isMiniProgram: () => boolean;
declare const isWechatMP: () => boolean;
declare const isWechatDevtools: () => boolean;
declare const isPC: () => boolean;
declare const isMobile: () => boolean;
declare const isClient: (str?: string | undefined) => any;
declare const isiOSApp: () => boolean;
declare const isAndroidApp: () => boolean;
declare const registerNativeFun: (name: string, cb: (c: any) => {}) => void;
declare const transferNativeFun: (name: string, data: any, cb: (c: any) => {}) => string | undefined;
declare function parseUrlAsLocation(urlStr: string): AnyObject;
declare function getUrlQueryMapInHistory(urlStr: string): AnyObject;
declare function getUrlQueryMapInHash(urlStr: string): AnyObject;
declare function getUrlQueryMap(urlStr: string): AnyObject;
declare function generateUrlByQuery(urlStr: string, obj: object): string;
declare function replacePage(url: string, desc?: Object): void;
declare function needRefreshPage(desc: undefined | string): void;
declare function isSupportWebP(): boolean | undefined;
export { getClientInfo, isWechat, isWeibo, isMiniProgram, isWechatMP, isWechatDevtools, isClient, isiOSApp, isAndroidApp, isPC, isMobile, transferNativeFun, registerNativeFun, parseUrlAsLocation, getUrlQueryMap, getUrlQueryMapInHistory, getUrlQueryMapInHash, generateUrlByQuery, replacePage, needRefreshPage, isSupportWebP, };
